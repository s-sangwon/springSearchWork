<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="staffMapper">
	<resultMap type="Staff" id="resultStaff">
		<id column="staff_no" property="staff_no"/>
		<result column="staff_name" property="staff_name" />
		<result column="jumin_no" property="jumin_no" />
		<result column="school_code" property="school_code" />
		<result column="department_code" property="department_code" />
		<result column="graduate_day" property="graduate_day" />
	</resultMap>


	<insert id="insertStaff" parameterType="Staff">
		<selectKey keyProperty="staff_no" order="BEFORE" resultType="int">
			select staff_seq.nextval from dual
		</selectKey>
		
		insert into staff(
						staff_no,
						staff_name,
						jumin_no,
						school_code,
						department_code,
						graduate_day)
		values(
				#{staff_no},
				#{staff_name},
				#{jumin_no},
				#{school_code},
				#{department_code},
				#{graduate_day})
	</insert>
	
	<insert id="insertSkill" parameterType="Staff_skill">
		insert into staff_skill(
				staff_skill_no,
				staff_no,
				skill_code)
		values(
				staff_skill_seq.nextval,
				#{staff_no},
				#{skill_code})
	</insert>
	
	<resultMap type="Staff" id="staffSkills">
	    <collection property="skill_code"  column="{staff_no=staff_no}"
	    ofType="String" 
	    select="staffMapper.getStaffSkillList"> 
	    </collection>
	</resultMap>
	
	<select id="getStaffSkillList" resultType="String" parameterType="staff_skill">
		select skill_code from staff_skill where staff_no = #{staff_no}
	</select>
	
	<select id="selectStaffByNo" parameterType="int" resultType="Staff" resultMap="staffSkills">
		select * from staff where staff_no = #{staff_no}
	</select>
	
	<update id="updateStaff" parameterType="Staff">
		update Staff set 
						staff_name = #{staff_name},
						jumin_no	= #{jumin_no},
						school_code = #{school_code},
						department_code = #{department_code},
						graduate_day = #{graduate_day}
					where staff_no = #{staff_no}
	</update>
	
	<delete id="deleteStaffSkillByNo" parameterType="int">
		delete from staff_skill where staff_no = #{staff_no}
	</delete>
	
	<delete id="deleteStaff" parameterType="int">
		delete from staff where staff_no = #{staff_no}
	</delete>
	
	<select id="searchStaffCount" parameterType="map" resultType="_int">
		select COUNT (Distinct s.staff_no)
		from staff s, staff_skill k
		where s.staff_no = k.staff_no
		
		<if test="staff_keyword != null and !staff_keyword.equals('')">
			and staff_name like  '%' || #{staff_keyword} ||'%'
		</if>
		
		<if test="gender != null and !gender.equals('') and gender.length > 0">
			and substr(jumin_no, 8, 1) in
		<foreach collection="gender" item="code" index="index" open="(" close=")" separator=",">
				<if test=' code.equals("M") '>
					'1','3'
				</if>
				<if test=' code.equals("F") '>
					'2','4'
				</if>
		</foreach>
		</if>
		
		<if test="department_code != null and !department_code.equals('') and department_code.length > 0">
			and department_code = #{department_code}
		</if>
		
		<if test="school_code != null and !school_code.equals('') and school_code.length > 0">
			and school_code in
		<foreach collection="school_code" item="code" index="index" open="(" close=")" separator=",">
				#{ code }
		</foreach>
		</if>
		
		<if test="skill_code != null and !skill_code.equals('') and skill_code.length > 0">
			and skill_code in
		<foreach collection="skill_code" item="code" index="index" open="(" close=")" separator=",">
				#{ code }
		</foreach>
		</if>
		
		<if test="startDate != null and !startDate.equals('')">
			and graduate_day between #{startDate} and #{endDate}
		</if>
	</select>
	
	<select id="searchStaffList_old" parameterType="map" resultMap="resultStaff">
		
		select *
		from(select ROWNUM RNUM, r.* from
		(select Distinct s.staff_no, s.staff_name, s.jumin_no, s.department_code, s.graduate_day
		from staff s, staff_skill k
		where s.staff_no = k.staff_no
		
		<if test="staff_keyword != null and !staff_keyword.equals('')">
			and staff_name like  '%' || #{staff_keyword} ||'%'
		</if>
		
		<if test="gender != null and !gender.equals('') and gender.length > 0">
			and substr(jumin_no, 8, 1) in
		<foreach collection="gender" item="code" index="index" open="(" close=")" separator=",">
				<if test=' code.equals("M") '>
					'1','3'
				</if>
				<if test=' code.equals("F") '>
					'2','4'
				</if>
		</foreach>
		</if>
		
		<if test="department_code != null and !department_code.equals('') and department_code.length > 0">
			and department_code = #{department_code}
		</if>
		
		<if test="school_code != null and !school_code.equals('') and school_code.length > 0">
			and school_code in
		<foreach collection="school_code" item="code" index="index" open="(" close=")" separator=",">
				#{ code }
		</foreach>
		</if>
		
		<if test="skill_code != null and !skill_code.equals('') and skill_code.length > 0">
			and skill_code in
		<foreach collection="skill_code" item="code" index="index" open="(" close=")" separator=",">
				#{ code }
		</foreach>
		</if>
		
		<if test="startDate != null and !startDate.equals('')">
			and graduate_day between #{startDate} and #{endDate}
		</if>
		order by s.staff_no desc) r)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="searchStaffList" parameterType="map" resultMap="resultStaff">
		
		select *
		from(select ROWNUM RNUM, r.* from
		(select Distinct s.staff_no, s.staff_name, s.jumin_no, s.department_code, s.graduate_day, department_name, CASE WHEN substr(jumin_no, 8, 1) in ('1', '3') then '남'
                                                                    													ELSE '여' END AS gender 
		from staff s, staff_skill k, code_department d
		where s.staff_no = k.staff_no and s.department_code = d.department_code
		
		<if test="staff_keyword != null and !staff_keyword.equals('')">
			and staff_name like  '%' || #{staff_keyword} ||'%'
		</if>
		
		<if test="gender != null and !gender.equals('') and gender.length > 0">
			and substr(jumin_no, 8, 1) in
		<foreach collection="gender" item="code" index="index" open="(" close=")" separator=",">
				<if test=' code.equals("M") '>
					'1','3'
				</if>
				<if test=' code.equals("F") '>
					'2','4'
				</if>
		</foreach>
		</if>
		
		<if test="department_code != null and !department_code.equals('') and department_code.length > 0">
			and s.department_code = #{department_code}
		</if>
		
		<if test="school_code != null and !school_code.equals('') and school_code.length > 0">
			and school_code in
		<foreach collection="school_code" item="code" index="index" open="(" close=")" separator=",">
				#{ code }
		</foreach>
		</if>
		
		<if test="skill_code != null and !skill_code.equals('') and skill_code.length > 0">
			and skill_code in
		<foreach collection="skill_code" item="code" index="index" open="(" close=")" separator=",">
				#{ code }
		</foreach>
		</if>
		
		<if test="startDate != null and !startDate.equals('')">
			and graduate_day between #{startDate} and #{endDate}
		</if>
		order by ${sort}) r)
		where rnum between #{startRow} and #{endRow}
	</select>
</mapper>